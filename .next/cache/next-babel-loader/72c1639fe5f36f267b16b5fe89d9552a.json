{"ast":null,"code":"var _jsxFileName = \"/home/trideep/Desktop/next_projects/project1/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    query\n  } = useRouter();\n  const {\n    data,\n    error\n  } = useSWR(`/api/randomQuote${query.author ? '?author=' + query.author : ''}`, fetcher); // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n\n  const author = data === null || data === void 0 ? void 0 : data.author;\n  let quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote.';\n  return __jsx(\"main\", {\n    className: \"jsx-1236022937\" + \" \" + \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1236022937\" + \" \" + \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-1236022937\" + \" \" + \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 18\n    }\n  }, \"- \", author), __jsx(_JSXStyle, {\n    id: \"1236022937\",\n    __self: this\n  }, \"main.jsx-1236022937{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-1236022937{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-1236022937{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyaWRlZXAvRGVza3RvcC9uZXh0X3Byb2plY3RzL3Byb2plY3QxL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBCa0IsQUFHcUIsQUFNVSxBQU1HLFVBWFAsVUFNRixHQU1BLEdBWEksUUFNSCxHQU1BLE9BWEcsS0FNRSxHQU10QixVQVhBLE9BTUEiLCJmaWxlIjoiL2hvbWUvdHJpZGVlcC9EZXNrdG9wL25leHRfcHJvamVjdHMvcHJvamVjdDEvcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L3JvdXRlcic7XG5pbXBvcnQgdXNlU1dSIGZyb20gJ3N3cic7XG5cbmZ1bmN0aW9uIGZldGNoZXIodXJsKSB7XG4gIHJldHVybiBmZXRjaCh1cmwpLnRoZW4ociA9PiByLmpzb24oKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEluZGV4KCkge1xuICBjb25zdCB7IHF1ZXJ5IH0gPSB1c2VSb3V0ZXIoKTtcbiAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gdXNlU1dSKFxuICAgIGAvYXBpL3JhbmRvbVF1b3RlJHtxdWVyeS5hdXRob3IgPyAnP2F1dGhvcj0nICsgcXVlcnkuYXV0aG9yIDogJyd9YCxcbiAgICBmZXRjaGVyXG4gICk7XG4gIC8vIFRoZSBmb2xsb3dpbmcgbGluZSBoYXMgb3B0aW9uYWwgY2hhaW5pbmcsIGFkZGVkIGluIE5leHQuanMgdjkuMS41LFxuICAvLyBpcyB0aGUgc2FtZSBhcyBgZGF0YSAmJiBkYXRhLmF1dGhvcmBcbiAgY29uc3QgYXV0aG9yID0gZGF0YT8uYXV0aG9yO1xuICBsZXQgcXVvdGUgPSBkYXRhPy5xdW90ZTtcblxuICBpZiAoIWRhdGEpIHF1b3RlID0gJ0xvYWRpbmcuLi4nO1xuICBpZiAoZXJyb3IpIHF1b3RlID0gJ0ZhaWxlZCB0byBmZXRjaCB0aGUgcXVvdGUuJztcblxuICByZXR1cm4gKFxuICAgIDxtYWluIGNsYXNzTmFtZT1cImNlbnRlclwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJxdW90ZVwiPntxdW90ZX08L2Rpdj5cbiAgICAgIHthdXRob3IgJiYgPHNwYW4gY2xhc3NOYW1lPVwiYXV0aG9yXCI+LSB7YXV0aG9yfTwvc3Bhbj59XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgbWFpbiB7XG4gICAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgICBtYXgtd2lkdGg6IDkwMHB4O1xuICAgICAgICAgIG1hcmdpbjogMzAwcHggYXV0bztcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICAgICAgLnF1b3RlIHtcbiAgICAgICAgICBmb250LWZhbWlseTogY3Vyc2l2ZTtcbiAgICAgICAgICBjb2xvcjogI2UyNDNkZTtcbiAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gICAgICAgIH1cbiAgICAgICAgLmF1dGhvciB7XG4gICAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gICAgICAgICAgY29sb3I6ICM1NTk4MzQ7XG4gICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9tYWluPlxuICApO1xufVxuLy8gaW1wb3J0IHVzZVNXUiBmcm9tICdzd3InO1xuXG4vLyBmdW5jdGlvbiBmZXRjaGVyKHVybCkge1xuLy8gICByZXR1cm4gZmV0Y2godXJsKS50aGVuKHIgPT4gci5qc29uKCkpO1xuLy8gfVxuXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmRleCgpIHtcbi8vICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gdXNlU1dSKCcvYXBpL3JhbmRvbVF1b3RlJywgZmV0Y2hlcik7XG4vLyAgIC8vIFRoZSBmb2xsb3dpbmcgbGluZSBoYXMgb3B0aW9uYWwgY2hhaW5pbmcsIGFkZGVkIGluIE5leHQuanMgdjkuMS41LFxuLy8gICAvLyBpcyB0aGUgc2FtZSBhcyBgZGF0YSAmJiBkYXRhLmF1dGhvcmBcbi8vICAgY29uc3QgYXV0aG9yID0gZGF0YT8uYXV0aG9yO1xuLy8gICBsZXQgcXVvdGUgPSBkYXRhPy5xdW90ZTtcblxuLy8gICBpZiAoIWRhdGEpIHF1b3RlID0gJ0xvYWRpbmcuLi4nO1xuLy8gICBpZiAoZXJyb3IpIHF1b3RlID0gJ0ZhaWxlZCB0byBmZXRjaCB0aGUgcXVvdGUuJztcblxuLy8gICByZXR1cm4gKFxuLy8gICAgIDxtYWluIGNsYXNzTmFtZT1cImNlbnRlclwiPlxuLy8gICAgICAgPGRpdiBjbGFzc05hbWU9XCJxdW90ZVwiPntxdW90ZX08L2Rpdj5cbi8vICAgICAgIHthdXRob3IgJiYgPHNwYW4gY2xhc3NOYW1lPVwiYXV0aG9yXCI+LSB7YXV0aG9yfTwvc3Bhbj59XG5cbi8vICAgICAgIDxzdHlsZSBqc3g+e2Bcbi8vICAgICAgICAgbWFpbiB7XG4vLyAgICAgICAgICAgd2lkdGg6IDkwJTtcbi8vICAgICAgICAgICBtYXgtd2lkdGg6IDkwMHB4O1xuLy8gICAgICAgICAgIG1hcmdpbjogMzAwcHggYXV0bztcbi8vICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4vLyAgICAgICAgIH1cbi8vICAgICAgICAgLnF1b3RlIHtcbi8vICAgICAgICAgICBmb250LWZhbWlseTogY3Vyc2l2ZTtcbi8vICAgICAgICAgICBjb2xvcjogI2UyNDNkZTtcbi8vICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4vLyAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4vLyAgICAgICAgIH1cbi8vICAgICAgICAgLmF1dGhvciB7XG4vLyAgICAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4vLyAgICAgICAgICAgY29sb3I6ICM1NTk4MzQ7XG4vLyAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuLy8gICAgICAgICB9XG4vLyAgICAgICBgfTwvc3R5bGU+XG4vLyAgICAgPC9tYWluPlxuLy8gICApO1xuLy8gfVxuLy8gaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL015TGF5b3V0Jztcbi8vIGltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG4vLyBpbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcblxuLy8gZnVuY3Rpb24gZ2V0UG9zdHMoKSB7XG4vLyAgIHJldHVybiBbXG4vLyAgICAgeyBpZDogJ2hlbGxvLW5leHRqcycsIHRpdGxlOiAnSGVsbG8gTmV4dC5qcycgfSxcbi8vICAgICB7IGlkOiAnbGVhcm4tbmV4dGpzJywgdGl0bGU6ICdMZWFybiBOZXh0LmpzIGlzIGF3ZXNvbWUnIH0sXG4vLyAgICAgeyBpZDogJ2RlcGxveS1uZXh0anMnLCB0aXRsZTogJ0RlcGxveSBhcHBzIHdpdGggWkVJVCcgfVxuLy8gICBdO1xuLy8gfVxuXG4vLyBjb25zdCBQb3N0TGluayA9ICh7IHBvc3QgfSkgPT4gKFxuLy8gICA8bGk+XG4vLyAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7cG9zdC5pZH1gfT5cbi8vICAgICAgIDxhPntwb3N0LnRpdGxlfTwvYT5cbi8vICAgICA8L0xpbms+XG4vLyAgICAgPHN0eWxlIGpzeD57YFxuLy8gICAgICAgbGkge1xuLy8gICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuLy8gICAgICAgICBtYXJnaW46IDVweCAwO1xuLy8gICAgICAgfVxuXG4vLyAgICAgICBhIHtcbi8vICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuLy8gICAgICAgICBjb2xvcjogYmx1ZTtcbi8vICAgICAgICAgZm9udC1mYW1pbHk6ICdBcmlhbCc7XG4vLyAgICAgICB9XG5cbi8vICAgICAgIGE6aG92ZXIge1xuLy8gICAgICAgICBvcGFjaXR5OiAwLjY7XG4vLyAgICAgICB9XG4vLyAgICAgYH08L3N0eWxlPlxuLy8gICA8L2xpPlxuLy8gKTtcblxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQmxvZygpIHtcbi8vICAgcmV0dXJuIChcbi8vICAgICA8TGF5b3V0PlxuLy8gICAgICAgPGgxPk15IEJsb2c8L2gxPlxuLy8gICAgICAgPHVsPlxuLy8gICAgICAgICB7Z2V0UG9zdHMoKS5tYXAocG9zdCA9PiAoXG4vLyAgICAgICAgICAgPFBvc3RMaW5rIGtleT17cG9zdC5pZH0gcG9zdD17cG9zdH0gLz5cbi8vICAgICAgICAgKSl9XG4vLyAgICAgICA8L3VsPlxuLy8gICAgICAgPHN0eWxlIGpzeD57YFxuLy8gICAgICAgICBoMSxcbi8vICAgICAgICAgYSB7XG4vLyAgICAgICAgICAgZm9udC1mYW1pbHk6ICdBcmlhbCc7XG4vLyAgICAgICAgIH1cblxuLy8gICAgICAgICB1bCB7XG4vLyAgICAgICAgICAgcGFkZGluZzogMDtcbi8vICAgICAgICAgfVxuXG4vLyAgICAgICAgIGxpIHtcbi8vICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuLy8gICAgICAgICAgIG1hcmdpbjogNXB4IDA7XG4vLyAgICAgICAgIH1cblxuLy8gICAgICAgICBhIHtcbi8vICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4vLyAgICAgICAgICAgY29sb3I6IGJsdWU7XG4vLyAgICAgICAgIH1cblxuLy8gICAgICAgICBhOmhvdmVyIHtcbi8vICAgICAgICAgICBvcGFjaXR5OiAwLjY7XG4vLyAgICAgICAgIH1cbi8vICAgICAgIGB9PC9zdHlsZT5cbi8vICAgICA8L0xheW91dD5cbi8vICAgKTtcbi8vIH1cblxuLy8gY29uc3QgSW5kZXggPSBwcm9wcyA9PiAoXG4vLyAgIDxMYXlvdXQ+XG4vLyAgICAgPGgxPkJhdG1hbiBUViBTaG93czwvaDE+XG4vLyAgICAgPHVsPlxuLy8gICAgICAge3Byb3BzLnNob3dzLm1hcChzaG93ID0+IChcbi8vICAgICAgICAgPGxpIGtleT17c2hvdy5pZH0+XG4vLyAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7c2hvdy5pZH1gfT5cbi8vICAgICAgICAgICAgIDxhPntzaG93Lm5hbWV9PC9hPlxuLy8gICAgICAgICAgIDwvTGluaz5cbi8vICAgICAgICAgPC9saT5cbi8vICAgICAgICkpfVxuLy8gICAgIDwvdWw+XG4vLyAgIDwvTGF5b3V0PlxuLy8gKTtcblxuLy8gSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oKSB7XG4vLyAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS50dm1hemUuY29tL3NlYXJjaC9zaG93cz9xPWJhdG1hbicpO1xuLy8gICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuLy8gICBjb25zb2xlLmxvZyhgU2hvdyBkYXRhIGZldGNoZWQuIENvdW50OiAke2RhdGEubGVuZ3RofWApO1xuXG4vLyAgIHJldHVybiB7XG4vLyAgICAgc2hvd3M6IGRhdGEubWFwKGVudHJ5ID0+IGVudHJ5LnNob3cpXG4vLyAgIH07XG4vLyB9O1xuXG4vLyBleHBvcnQgZGVmYXVsdCBJbmRleDtcbi8vIGltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9NeUxheW91dCc7XG4vLyAvLyBpbXBvcnQgd2l0aExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL015TGF5b3V0Jztcbi8vIGltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5cbi8vIGNvbnN0IFBvc3RMaW5rID0gcHJvcHMgPT4gKFxuLy8gICA8bGk+XG4vLyAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7cHJvcHMuaWR9YH0+XG4vLyAgICAgICA8YT57cHJvcHMuaWR9PC9hPlxuLy8gICAgIDwvTGluaz5cbi8vICAgPC9saT5cbi8vICk7XG5cbi8vIGV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEJsb2coKSB7XG4vLyAgIHJldHVybiAoXG4vLyAgICAgPExheW91dD5cbi8vICAgICAgIDxoMT5NeSBCbG9nPC9oMT5cbi8vICAgICAgIDx1bD5cbi8vICAgICAgICAgPFBvc3RMaW5rIGlkPVwiaGVsbG8tbmV4dGpzXCIgLz5cbi8vICAgICAgICAgPFBvc3RMaW5rIGlkPVwibGVhcm4tbmV4dGpzXCIgLz5cbi8vICAgICAgICAgPFBvc3RMaW5rIGlkPVwiZGVwbG95LW5leHRqc1wiIC8+XG4vLyAgICAgICA8L3VsPlxuLy8gICAgIDwvTGF5b3V0PlxuLy8gICApO1xuLy8gfVxuXG4vLyAvLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmRleCgpIHtcbi8vIC8vICAgcmV0dXJuIChcbi8vIC8vICAgICA8TGF5b3V0PlxuLy8gLy8gICAgICAgPHA+SGVsbG8gTmV4dC5qczwvcD5cbi8vIC8vICAgICA8L0xheW91dD5cbi8vIC8vICAgKTtcbi8vIC8vIH1cblxuXG4vLyAvLyBjb25zdCBQYWdlID0gKCkgPT4gPHA+SGVsbG8gTmV4dC5qczwvcD47XG5cbi8vIC8vIGV4cG9ydCBkZWZhdWx0IHdpdGhMYXlvdXQoUGFnZSk7Il19 */\\n/*@ sourceURL=/home/trideep/Desktop/next_projects/project1/pages/index.js */\"));\n} // import useSWR from 'swr';\n// function fetcher(url) {\n//   return fetch(url).then(r => r.json());\n// }\n// export default function Index() {\n//   const { data, error } = useSWR('/api/randomQuote', fetcher);\n//   // The following line has optional chaining, added in Next.js v9.1.5,\n//   // is the same as `data && data.author`\n//   const author = data?.author;\n//   let quote = data?.quote;\n//   if (!data) quote = 'Loading...';\n//   if (error) quote = 'Failed to fetch the quote.';\n//   return (\n//     <main className=\"center\">\n//       <div className=\"quote\">{quote}</div>\n//       {author && <span className=\"author\">- {author}</span>}\n//       <style jsx>{`\n//         main {\n//           width: 90%;\n//           max-width: 900px;\n//           margin: 300px auto;\n//           text-align: center;\n//         }\n//         .quote {\n//           font-family: cursive;\n//           color: #e243de;\n//           font-size: 24px;\n//           padding-bottom: 10px;\n//         }\n//         .author {\n//           font-family: sans-serif;\n//           color: #559834;\n//           font-size: 20px;\n//         }\n//       `}</style>\n//     </main>\n//   );\n// }\n// import Layout from '../components/MyLayout';\n// import Link from 'next/link';\n// import fetch from 'isomorphic-unfetch';\n// function getPosts() {\n//   return [\n//     { id: 'hello-nextjs', title: 'Hello Next.js' },\n//     { id: 'learn-nextjs', title: 'Learn Next.js is awesome' },\n//     { id: 'deploy-nextjs', title: 'Deploy apps with ZEIT' }\n//   ];\n// }\n// const PostLink = ({ post }) => (\n//   <li>\n//     <Link href=\"/p/[id]\" as={`/p/${post.id}`}>\n//       <a>{post.title}</a>\n//     </Link>\n//     <style jsx>{`\n//       li {\n//         list-style: none;\n//         margin: 5px 0;\n//       }\n//       a {\n//         text-decoration: none;\n//         color: blue;\n//         font-family: 'Arial';\n//       }\n//       a:hover {\n//         opacity: 0.6;\n//       }\n//     `}</style>\n//   </li>\n// );\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         {getPosts().map(post => (\n//           <PostLink key={post.id} post={post} />\n//         ))}\n//       </ul>\n//       <style jsx>{`\n//         h1,\n//         a {\n//           font-family: 'Arial';\n//         }\n//         ul {\n//           padding: 0;\n//         }\n//         li {\n//           list-style: none;\n//           margin: 5px 0;\n//         }\n//         a {\n//           text-decoration: none;\n//           color: blue;\n//         }\n//         a:hover {\n//           opacity: 0.6;\n//         }\n//       `}</style>\n//     </Layout>\n//   );\n// }\n// const Index = props => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(show => (\n//         <li key={show.id}>\n//           <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// );\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n//   console.log(`Show data fetched. Count: ${data.length}`);\n//   return {\n//     shows: data.map(entry => entry.show)\n//   };\n// };\n// export default Index;\n// import Layout from '../components/MyLayout';\n// // import withLayout from '../components/MyLayout';\n// import Link from 'next/link';\n// const PostLink = props => (\n//   <li>\n//     <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n//       <a>{props.id}</a>\n//     </Link>\n//   </li>\n// );\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink id=\"hello-nextjs\" />\n//         <PostLink id=\"learn-nextjs\" />\n//         <PostLink id=\"deploy-nextjs\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n// // export default function Index() {\n// //   return (\n// //     <Layout>\n// //       <p>Hello Next.js</p>\n// //     </Layout>\n// //   );\n// // }\n// // const Page = () => <p>Hello Next.js</p>;\n// // export default withLayout(Page);","map":{"version":3,"sources":["/home/trideep/Desktop/next_projects/project1/pages/index.js"],"names":["useRouter","useSWR","fetcher","url","fetch","then","r","json","Index","query","data","error","author","quote"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;;AAED,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAYT,SAAS,EAA3B;AACA,QAAM;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBV,MAAM,CAC3B,mBAAkBQ,KAAK,CAACG,MAAN,GAAe,aAAaH,KAAK,CAACG,MAAlC,GAA2C,EAAG,EADrC,EAE5BV,OAF4B,CAA9B,CAF8B,CAM9B;AACA;;AACA,QAAMU,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,MAArB;AACA,MAAIC,KAAK,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,KAAlB;AAEA,MAAI,CAACH,IAAL,EAAWG,KAAK,GAAG,YAAR;AACX,MAAIF,KAAJ,EAAWE,KAAK,GAAG,4BAAR;AAEX,SACE;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADF,EAEGD,MAAM,IAAI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAFb;AAAA;AAAA;AAAA,m+PADF;AA0BD,C,CACD;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA","sourcesContent":["import { useRouter } from 'next/router';\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const { query } = useRouter();\n  const { data, error } = useSWR(\n    `/api/randomQuote${query.author ? '?author=' + query.author : ''}`,\n    fetcher\n  );\n  // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n  const author = data?.author;\n  let quote = data?.quote;\n\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote.';\n\n  return (\n    <main className=\"center\">\n      <div className=\"quote\">{quote}</div>\n      {author && <span className=\"author\">- {author}</span>}\n\n      <style jsx>{`\n        main {\n          width: 90%;\n          max-width: 900px;\n          margin: 300px auto;\n          text-align: center;\n        }\n        .quote {\n          font-family: cursive;\n          color: #e243de;\n          font-size: 24px;\n          padding-bottom: 10px;\n        }\n        .author {\n          font-family: sans-serif;\n          color: #559834;\n          font-size: 20px;\n        }\n      `}</style>\n    </main>\n  );\n}\n// import useSWR from 'swr';\n\n// function fetcher(url) {\n//   return fetch(url).then(r => r.json());\n// }\n\n// export default function Index() {\n//   const { data, error } = useSWR('/api/randomQuote', fetcher);\n//   // The following line has optional chaining, added in Next.js v9.1.5,\n//   // is the same as `data && data.author`\n//   const author = data?.author;\n//   let quote = data?.quote;\n\n//   if (!data) quote = 'Loading...';\n//   if (error) quote = 'Failed to fetch the quote.';\n\n//   return (\n//     <main className=\"center\">\n//       <div className=\"quote\">{quote}</div>\n//       {author && <span className=\"author\">- {author}</span>}\n\n//       <style jsx>{`\n//         main {\n//           width: 90%;\n//           max-width: 900px;\n//           margin: 300px auto;\n//           text-align: center;\n//         }\n//         .quote {\n//           font-family: cursive;\n//           color: #e243de;\n//           font-size: 24px;\n//           padding-bottom: 10px;\n//         }\n//         .author {\n//           font-family: sans-serif;\n//           color: #559834;\n//           font-size: 20px;\n//         }\n//       `}</style>\n//     </main>\n//   );\n// }\n// import Layout from '../components/MyLayout';\n// import Link from 'next/link';\n// import fetch from 'isomorphic-unfetch';\n\n// function getPosts() {\n//   return [\n//     { id: 'hello-nextjs', title: 'Hello Next.js' },\n//     { id: 'learn-nextjs', title: 'Learn Next.js is awesome' },\n//     { id: 'deploy-nextjs', title: 'Deploy apps with ZEIT' }\n//   ];\n// }\n\n// const PostLink = ({ post }) => (\n//   <li>\n//     <Link href=\"/p/[id]\" as={`/p/${post.id}`}>\n//       <a>{post.title}</a>\n//     </Link>\n//     <style jsx>{`\n//       li {\n//         list-style: none;\n//         margin: 5px 0;\n//       }\n\n//       a {\n//         text-decoration: none;\n//         color: blue;\n//         font-family: 'Arial';\n//       }\n\n//       a:hover {\n//         opacity: 0.6;\n//       }\n//     `}</style>\n//   </li>\n// );\n\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         {getPosts().map(post => (\n//           <PostLink key={post.id} post={post} />\n//         ))}\n//       </ul>\n//       <style jsx>{`\n//         h1,\n//         a {\n//           font-family: 'Arial';\n//         }\n\n//         ul {\n//           padding: 0;\n//         }\n\n//         li {\n//           list-style: none;\n//           margin: 5px 0;\n//         }\n\n//         a {\n//           text-decoration: none;\n//           color: blue;\n//         }\n\n//         a:hover {\n//           opacity: 0.6;\n//         }\n//       `}</style>\n//     </Layout>\n//   );\n// }\n\n// const Index = props => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(show => (\n//         <li key={show.id}>\n//           <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// );\n\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n\n//   console.log(`Show data fetched. Count: ${data.length}`);\n\n//   return {\n//     shows: data.map(entry => entry.show)\n//   };\n// };\n\n// export default Index;\n// import Layout from '../components/MyLayout';\n// // import withLayout from '../components/MyLayout';\n// import Link from 'next/link';\n\n// const PostLink = props => (\n//   <li>\n//     <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n//       <a>{props.id}</a>\n//     </Link>\n//   </li>\n// );\n\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink id=\"hello-nextjs\" />\n//         <PostLink id=\"learn-nextjs\" />\n//         <PostLink id=\"deploy-nextjs\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n\n// // export default function Index() {\n// //   return (\n// //     <Layout>\n// //       <p>Hello Next.js</p>\n// //     </Layout>\n// //   );\n// // }\n\n\n// // const Page = () => <p>Hello Next.js</p>;\n\n// // export default withLayout(Page);"]},"metadata":{},"sourceType":"module"}